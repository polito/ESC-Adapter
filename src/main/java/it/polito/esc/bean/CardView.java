package it.polito.esc.bean;

import java.io.Serializable;
import java.util.Date;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.gson.annotations.Expose;
import com.google.gson.annotations.SerializedName;

public class CardView implements Cloneable, Serializable {

	private static final long serialVersionUID = 4121992091220241209L;

	/**
	 * The card number using the algorithm RFC-4122 version 1, use /api/v2/cards/generate-escn to generate a valid card number or leave it blank and it will be autogenerated (POST ONLY)
	 * 
	 * example: 3e506370-826a-103d-bf76-001000000001
	 */
	@JsonProperty("cardNumber")
	@JsonInclude(JsonInclude.Include.NON_NULL)
	@SerializedName("cardNumber")
	@Expose
	private String cardNumber;

	@JsonProperty("cardStatusType")
	@JsonInclude(JsonInclude.Include.NON_NULL)
	@SerializedName("cardStatusType")
	@Expose
	private CodeView cardStatusType;

	@JsonProperty("cardType")
	@JsonInclude(JsonInclude.Include.NON_NULL)
	@SerializedName("cardType")
	@Expose
	private CodeView cardType;

	/**
	 * The name displayed on the card
	 * 
	 * example: Card of John
	 */
	@JsonProperty("displayName")
	@JsonInclude(JsonInclude.Include.NON_NULL)
	@SerializedName("displayName")
	@Expose
	private String displayName;

	/**
	 * The expiration date of the card (yyyy-MM-dd ISO-8601)
	 * 
	 * example: 2022-12-04
	 */
	@JsonProperty("expiresAt")
	@JsonInclude(JsonInclude.Include.NON_NULL)
	@SerializedName("expiresAt")
	@Expose
	private Date expiresAt;

	/**
	 * Is the User's organisation authorized with the card
	 */
	@JsonProperty("hasOwnerAuthorization")
	@JsonInclude(JsonInclude.Include.NON_NULL)
	@SerializedName("hasOwnerAuthorization")
	@Expose
	private Boolean hasOwnerAuthorization;

	/**
	 * The issued date of the card (yyyy-MM-dd ISO-8601)
	 * 
	 * example: 2021-12-04
	 */
	@JsonProperty("issuedAt")
	@JsonInclude(JsonInclude.Include.NON_NULL)
	@SerializedName("issuedAt")
	@Expose
	private Date issuedAt;

	@JsonProperty("issuer")
	@JsonInclude(JsonInclude.Include.NON_NULL)
	@SerializedName("issuer")
	@Expose
	private OrganisationLiteView issuer;

	@JsonProperty("person")
	@JsonInclude(JsonInclude.Include.NON_NULL)
	@SerializedName("person")
	@Expose
	private PersonLiteView person;

	@JsonProperty("processor")
	@JsonInclude(JsonInclude.Include.NON_NULL)
	@SerializedName("processor")
	@Expose
	private OrganisationLiteView processor;

	public CardView() {
		super();
	}

	public CardView(String cardNumber, CodeView cardStatusType, CodeView cardType, String displayName, Date expiresAt,
			Boolean hasOwnerAuthorization, Date issuedAt, OrganisationLiteView issuer, PersonLiteView person,
			OrganisationLiteView processor) {
		super();
		this.cardNumber = cardNumber;
		this.cardStatusType = cardStatusType;
		this.cardType = cardType;
		this.displayName = displayName;
		this.expiresAt = expiresAt;
		this.hasOwnerAuthorization = hasOwnerAuthorization;
		this.issuedAt = issuedAt;
		this.issuer = issuer;
		this.person = person;
		this.processor = processor;
	}

	public String getCardNumber() {
		return cardNumber;
	}

	public void setCardNumber(String cardNumber) {
		this.cardNumber = cardNumber;
	}

	public CodeView getCardStatusType() {
		return cardStatusType;
	}

	public void setCardStatusType(CodeView cardStatusType) {
		this.cardStatusType = cardStatusType;
	}

	public CodeView getCardType() {
		return cardType;
	}

	public void setCardType(CodeView cardType) {
		this.cardType = cardType;
	}

	public String getDisplayName() {
		return displayName;
	}

	public void setDisplayName(String displayName) {
		this.displayName = displayName;
	}

	public Date getExpiresAt() {
		return expiresAt;
	}

	public void setExpiresAt(Date expiresAt) {
		this.expiresAt = expiresAt;
	}

	public Boolean getHasOwnerAuthorization() {
		return hasOwnerAuthorization;
	}

	public void setHasOwnerAuthorization(Boolean hasOwnerAuthorization) {
		this.hasOwnerAuthorization = hasOwnerAuthorization;
	}

	public Date getIssuedAt() {
		return issuedAt;
	}

	public void setIssuedAt(Date issuedAt) {
		this.issuedAt = issuedAt;
	}

	public OrganisationLiteView getIssuer() {
		return issuer;
	}

	public void setIssuer(OrganisationLiteView issuer) {
		this.issuer = issuer;
	}

	public PersonLiteView getPerson() {
		return person;
	}

	public void setPerson(PersonLiteView person) {
		this.person = person;
	}

	public OrganisationLiteView getProcessor() {
		return processor;
	}

	public void setProcessor(OrganisationLiteView processor) {
		this.processor = processor;
	}

	@Override
	public CardView clone() {
		return new CardView(cardNumber, cardStatusType.clone(), cardType.clone(), displayName, expiresAt,
				hasOwnerAuthorization, issuedAt, issuer.clone(), person.clone(), processor.clone());
	}

	@Override
	public String toString() {
		return "CardView [cardNumber=" + cardNumber + ", cardStatusType=" + cardStatusType + ", cardType=" + cardType
				+ ", displayName=" + displayName + ", expiresAt=" + expiresAt + ", hasOwnerAuthorization="
				+ hasOwnerAuthorization + ", issuedAt=" + issuedAt + ", issuer=" + issuer + ", person=" + person
				+ ", processor=" + processor + "]";
	}

}
